/** Declaration file generated by dts-gen */
declare module "min-dash" {
    export function assign(target: any, ...args: any[]): any;

    export function bind(fn: any, target: any): any;
    
    export function debounce(fn: any, timeout: any, ...args: any[]): any;
    
    export function ensureArray(obj: any): void;
    
    export function every(collection: any, matcher: any): any;
    
    export function filter(collection: any, matcher: any): any;
    
    export function find(collection: any, matcher: any): any;
    
    export function findIndex(collection: any, matcher: any): any;
    
    export function flatten(arr: any, bool? : boolean): any;
    
    export function forEach(collection: any, iterator: any): void;
    
    export function groupBy(collection: any, extractor: any, ...args: any[]): any;
    
    export function has(target: any, key: any): any;
    
    export function isArray(obj: any): any;
    
    export function isDefined(obj: any): any;
    
    export function isFunction(obj: any): any;
    
    export function isNumber(obj: any): any;
    
    export function isObject(obj: any): any;
    
    export function isString(obj: any): any;
    
    export function isUndefined(obj: any): any;
    
    export function keys(collection: any): any;
    
    export function map(collection: any, fn: any): any;
    
    export function matchPattern(pattern: any): any;
    
    export function merge(target: any, ...args: any[]): any;
    
    export function omit(target: any, properties: any): any;
    
    export function pick(target: any, properties: any): any;
    
    export function reduce(collection: any, iterator: any, result: any): any;
    
    export function size(collection: any): any;
    
    export function some(collection: any, matcher: any): any;
    
    export function sortBy(collection: any, extractor: any): any;
    
    export function unionBy(extractor: any, ...args: any[]): any;
    
    export function uniqueBy(extractor: any, ...args: any[]): any;
    
    export function values(collection: any): any;
    
    export function without(arr: any, matcher: any): any;
    
    export namespace assign {
        const prototype: {
        };
    
    }
    
    export namespace bind {
        const prototype: {
        };
    
    }
    
    export namespace debounce {
        const prototype: {
        };
    
    }
    
    export namespace ensureArray {
        const prototype: {
        };
    
    }
    
    export namespace every {
        const prototype: {
        };
    
    }
    
    export namespace filter {
        const prototype: {
        };
    
    }
    
    export namespace find {
        const prototype: {
        };
    
    }
    
    export namespace findIndex {
        const prototype: {
        };
    
    }
    
    export namespace flatten {
        const prototype: {
        };
    
    }
    
    export namespace forEach {
        const prototype: {
        };
    
    }
    
    export namespace groupBy {
        const prototype: {
        };
    
    }
    
    export namespace has {
        const prototype: {
        };
    
    }
    
    export namespace isArray {
        const prototype: {
        };
    
    }
    
    export namespace isDefined {
        const prototype: {
        };
    
    }
    
    export namespace isFunction {
        const prototype: {
        };
    
    }
    
    export namespace isNumber {
        const prototype: {
        };
    
    }
    
    export namespace isObject {
        const prototype: {
        };
    
    }
    
    export namespace isString {
        const prototype: {
        };
    
    }
    
    export namespace isUndefined {
        const prototype: {
        };
    
    }
    
    export namespace keys {
        const prototype: {
        };
    
    }
    
    export namespace map {
        const prototype: {
        };
    
    }
    
    export namespace matchPattern {
        const prototype: {
        };
    
    }
    
    export namespace merge {
        const prototype: {
        };
    
    }
    
    export namespace omit {
        const prototype: {
        };
    
    }
    
    export namespace pick {
        const prototype: {
        };
    
    }
    
    export namespace reduce {
        const prototype: {
        };
    
    }
    
    export namespace size {
        const prototype: {
        };
    
    }
    
    export namespace some {
        const prototype: {
        };
    
    }
    
    export namespace sortBy {
        const prototype: {
        };
    
    }
    
    export namespace unionBy {
        const prototype: {
        };
    
    }
    
    export namespace uniqueBy {
        const prototype: {
        };
    
    }
    
    export namespace values {
        const prototype: {
        };
    
    }
    
    export namespace without {
        const prototype: {
        };
    
    }
    
    
}
