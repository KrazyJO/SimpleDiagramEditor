//this is a port of the awesome bbq applicaiton from programming methedologoies

function newRandomID() {
    // https://gist.github.com/gordonbrander/2230317
    return Math.random().toString(36).substr(2, 9);
}

class Person {

    constructor(name) {
        this.name = name;
        this.items = [];
        this.ID = newRandomID();
        this.saldo = 0;
    }

    addItem(name, price) {
        console.log("add item")
        let item = new Item(name, price);
        this.items.push(item);
    }

    getPersonTotal() {
        let total = 0;
        this.items.forEach(item => {
            total += parseInt(item.price);
        });
        return total;
    }

    calculateOwnSaldoWithShare(share) {
        this.saldo = parseFloat(share - this.getPersonTotal()).toFixed(2);
    }
}

class Item {

    constructor(name, price) {
        this.name = name;
        this.price = price;
    }
}

class Application {

    //initialize with empty object
    constructor() {
        //initialize rootModle
        let bob = new Person("Bob");
        bob.addItem('beer', 10);
        bob.addItem('crackers', 15);

        window.rootModle = {
            total : 42,
            share : 21,
            persons : [
                bob,
                new Person("Alice")
            ]
        };
    }

    

    addItemToPersonWithID(ID, name, price) {
        let persons = window.rootModle.persons;
        for (let i = 0; i < persons.length; i++) {
            console.log("found " + persons.ID)
            if (persons[i].ID === ID) {
                persons[i].addItem(name, price);
            }
        }
    }

    calculateTotal() {
        let total = 0;
        window.rootModle.persons.forEach(person => {
            total += parseInt(person.getPersonTotal());
        });
        return total;
    }

    calculateSaldoForEveryone() {
        let persons = window.rootModle.persons;
        let share = window.rootModle.share;
        persons.forEach(person => {
            person.calculateOwnSaldoWithShare(share);
        }); 
    }

    renderApplication() {
        //call a global function to recalculate total
        setNewTotal();

        //render now the application
        let application = document.getElementById('bbqapplication');
        application.innerHTML = '';

        let total = document.createElement('div');
        total.setAttribute('class', 'bbq-total');
        total.innerText = 'total: ' + parseFloat(window.rootModle.total).toFixed(2) + ', share: '+ parseFloat(window.rootModle.share).toFixed(2);
        application.appendChild(total);

        let container = document.createElement('div');

        //render persons
        let renderedPerson;
        for (let i = 0; i < window.rootModle.persons.length; i++) {
            renderedPerson = this.renderPerson(window.rootModle.persons[i]);
            container.appendChild(renderedPerson);
        }

        container.appendChild(this.renderAddPersonArea());

        application.appendChild(container);
    }

    renderAddPersonArea() {
        let divAddPerson = document.createElement('div');
        divAddPerson.setAttribute('class', 'bbq-addPerson');

        let inputAddPerson = document.createElement('input');
        inputAddPerson.setAttribute('id', 'inputNewPerson');
        inputAddPerson.setAttribute('placeholder', 'Name');

        let buttonAddPerson = document.createElement('button');
        buttonAddPerson.innerText = "Add Person";
        buttonAddPerson.addEventListener('click', addPerson);

        divAddPerson.appendChild(inputAddPerson);
        divAddPerson.appendChild(buttonAddPerson);

        return divAddPerson;
    }

    renderPerson(person) {
        let element = document.createElement('div');
        element.setAttribute('data-id', person.ID);
        element.setAttribute('class', 'bbq-person');
        
        let firstLine = document.createElement('div');
        firstLine.setAttribute('class', 'bbq-person-firstline');

        let name = document.createElement('div');
        name.setAttribute('class', 'bbq-person-name');
        name.innerText = person.name;

        let saldo = document.createElement('div');
        saldo.setAttribute('class', 'bbq-person-saldo');
        saldo.innerText = 'saldo: ' + parseFloat(person.saldo).toFixed(2);

        firstLine.appendChild(name);
        firstLine.appendChild(saldo);
        element.appendChild(firstLine);

        person.items.forEach((item) => {
            element.appendChild(this.renderItem(item));
        });

        this.renderAddItem(element);

        return element;

    }

    addItemListener(button) {
        button.addEventListener('click', function(evt) {
            addItem(evt);
        }.bind(this));
    }

    renderItem(item) {
        let element = document.createElement('div');
        element.setAttribute('class', 'bbq-item');
        
        let itemName = document.createElement('div');
        itemName.setAttribute('class', 'bbq-itemName');
        itemName.innerText = item.name;

        let itemPrice = document.createElement('div');
        itemPrice.setAttribute('class', 'bbq-itemPrice');
        itemPrice.innerText = item.price;

        element.appendChild(itemName);
        element.appendChild(itemPrice);

        return element;

    }

    renderAddItem(element, person) {
        let container = document.createElement('div');
        container.setAttribute('class', 'bbq-addItem');
        let firstLine = document.createElement('div');
        let name = document.createElement('input');
        name.setAttribute('placeholder', 'item name');
        name.setAttribute('class', 'bbq-addItem-name');
        let price = document.createElement('input');
        price.setAttribute('placeholder', 'price');
        price.setAttribute('class', 'bbq-addItem-price');
        firstLine.appendChild(name);
        firstLine.appendChild(price);

        let btn = document.createElement('button');
        btn.setAttribute('class', 'bbq-addItem-btn');
        btn.innerText = 'add item';
        this.addItemListener(btn, person);

        container.appendChild(firstLine);
        container.appendChild(btn);

        element.appendChild(container);
    }
}

let application = new Application();
window.onload = function() {
    application.renderApplication();
}; 


function addPerson() {
    let name = document.getElementById('inputNewPerson').value;
    window.rootModle.persons.push(new Person(name));
    application.renderApplication();
    console.log("just to show");
}

//@debug
function addItem(event) {
    let parentElement = event.target.parentElement;
    let price = parentElement.getElementsByClassName('bbq-addItem-price')[0].value;
    let name = parentElement.getElementsByClassName('bbq-addItem-name')[0].value;
    let ID = parentElement.parentElement.getAttribute('data-id');
    console.log(ID);
    application.addItemToPersonWithID(ID, name, price);
    application.renderApplication();
}


function setNewTotal() {
    let newTotal = application.calculateTotal();
    rootModle.total = newTotal;
    rootModle.share = newTotal / window.rootModle.persons.length;
    application.calculateSaldoForEveryone();
    console.log("just to show");
}